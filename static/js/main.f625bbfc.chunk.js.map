{"version":3,"sources":["components/card/card.components.js","components/card-list/card-list.components.js","components/search-box/search-box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","cat","id","name","email","CardList","cats","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredCats","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,EAAO,SAAAC,GAChB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,aAAaD,UAAU,wBAAwBE,IAAG,+BAA0BH,EAAMI,IAAIC,GAApC,4BAC3D,6BAAKL,EAAMI,IAAIE,OACf,4BAAIN,EAAMI,IAAIG,YCHbC,EAAW,SAAAR,GAEpB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMS,KAAKC,KAAI,SAAAN,GAAG,OAEf,aADA,CACC,EAAD,CAAmBA,IAAKA,GAAbA,EAAIC,UCEZM,G,MATG,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAEd,uBACIZ,UAAU,SACVa,KAAK,SAASF,YAAaA,EAC3BG,SAAUF,MCoCHG,E,kDApCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXR,KAAM,GACNS,YAAa,IALJ,E,qDAUb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,KAAMc,S,oBAKtC,WAAS,IAAD,OAEN,EAA4BE,KAAKR,MAA1BR,EAAP,EAAOA,KAAMS,EAAb,EAAaA,YACPQ,EAAejB,EAAKkB,QAAO,SAAAvB,GAAG,OAAIA,EAAIE,KAAKsB,cAAcC,SAASX,EAAYU,kBAEpF,OACE,sBAAK3B,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CACEW,YAAY,aACZC,aAAe,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAE3D,cAAC,EAAD,CAAUvB,KAAMiB,W,GAjCNO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f625bbfc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => {\r\n    return(\r\n        <div className=\"card-container\">\r\n            <img alt=\"scary-cats\" className=\"card-container__image\" src={`https://robohash.org/${props.cat.id}?set=set4&size=500x500`} />\r\n            <h2>{props.cat.name}</h2>\r\n            <p>{props.cat.email}</p>\r\n        </div>\r\n    )\r\n}","// this component is responsible for the rendering of all the cards \r\nimport React from 'react';\r\nimport './card-list.styles.css'\r\nimport { Card } from '../card/card.components';\r\n\r\nexport const CardList = props => {\r\n    \r\n    return <div className=\"card-list\">\r\n        {props.cats.map(cat => (\r\n            // <h1 key={cat.key}>{cat.name}</h1>\r\n            <Card key={cat.id} cat={cat} />\r\n        ))}\r\n    </div>\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nconst SearchBox = ({placeholder, handleChange}) => (\r\n   \r\n    <input\r\n        className=\"search\"\r\n        type=\"search\" placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);\r\n\r\nexport default SearchBox;","import './App.css';\nimport React, {Component} from 'react';\nimport { CardList } from './components/card-list/card-list.components';\nimport SearchBox from './components/search-box/search-box.component';\n\nclass App extends Component{\n\n  // constructor method\n  constructor(){\n    super();\n\n    this.state = {\n      cats: [],\n      searchField: ''\n    };\n  }\n\n  // when this app components first builts in DOM, this method is called\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({cats: users}))\n  }\n\n\n  // main rendering method, everything of app renders here\n  render(){\n\n    const {cats, searchField} = this.state;\n    const filteredCats = cats.filter(cat => cat.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <h1>Cute Cats</h1>\n        <SearchBox \n          placeholder=\"Search cat\" \n          handleChange= {e => this.setState({searchField: e.target.value})} \n        />  \n        <CardList cats={filteredCats} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}